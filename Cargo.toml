[package]
name = "ry"
description = "ry = rust + python"
version.workspace = true
edition.workspace = true
authors.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lib]
name = "ry"
crate-type = ["cdylib"]

[dependencies]
pyo3 = { workspace = true, features = ["experimental-inspect", "experimental-async"] }
ryo3 = { workspace = true, features = ["all"] }
tracing.workspace = true
tracing-subscriber.workspace = true

[build-dependencies]
pyo3-build-config.workspace = true
jiff.workspace = true

[profile.dev]
opt-level = 0

[profile.release]
opt-level = 3
strip = true
debug = false
# __FAT_VS_THIN_LTO__?
# tbd if this ought to be fat or thin, on one hand, 'thin' compiles MUCH faster
# but on the other hand, I am an american...
# there does not seem to be a noticeable difference in the performance tho
# at the time of writing this (2024-12-20) the `fat` binary is 12.5mb and
# the `thin` binary is 12.6mb (who's thin now!?).
lto = "thin" # or "fat"

# release fat profile
[profile.bench]
inherits = "release"
lto = "fat"


[workspace]
resolver = "2"
members = [
  "crates/ryo3",
  "crates/_ryo3-dev",
  "crates/_ryo3-quick-maths",
  "crates/ryo3-macros",
  "crates/ryo3-types",
  "crates/ryo3-std",
  "crates/ryo3-fspath",
  # external wrappers
  "crates/ryo3-brotli",
  "crates/ryo3-bytes",
  "crates/ryo3-bzip2",
  "crates/ryo3-dirs",
  "crates/ryo3-flate2",
  "crates/ryo3-fnv",
  "crates/ryo3-globset",
  "crates/ryo3-heck",
  "crates/ryo3-http",
  "crates/ryo3-jiff",
  "crates/ryo3-jiter",
  "crates/ryo3-regex",
  "crates/ryo3-reqwest",
  "crates/ryo3-same-file",
  "crates/ryo3-shlex",
  "crates/ryo3-sqlformat",
  "crates/ryo3-tokio",
  "crates/ryo3-unindent",
  "crates/ryo3-url",
  "crates/ryo3-walkdir",
  "crates/ryo3-which",
  "crates/ryo3-xxhash",
  "crates/ryo3-zstd",
]

[workspace.package]
version = "0.0.29"
authors = [
  "Jesse K. Rubin <jessekrubin@gmail.com>",
  # hopefully you will contribute!
]
documentation = "https://github.com/jessekrubin/ry"
edition = "2021"
homepage = "https://github.com/jessekrubin/ry"
license = "MIT OR Apache-2.0"
repository = "https://github.com/jessekrubin/ry"

[workspace.dependencies]
# ======
# ryo3-*
# ======
# internal
ryo3 = { path = "./crates/ryo3", features = ["all"] }
ryo3-dev = { path = "./crates/_ryo3-dev" }
ryo3-types = { path = "./crates/ryo3-types" }
ryo3-std = { path = "./crates/ryo3-std" }
ryo3-fspath = { path = "./crates/ryo3-fspath" }
ryo3-macros = { path = "./crates/ryo3-macros" }
ryo3-quick-maths = { path = "./crates/_ryo3-quick-maths" } # template library
# dev/future
#ryo3-ignore = { path = "./crates/_future/ryo3-ignore" }
# wrappers
ryo3-brotli = { path = "./crates/ryo3-brotli" }
ryo3-bytes = { path = "./crates/ryo3-bytes" }
ryo3-bzip2 = { path = "./crates/ryo3-bzip2" }
ryo3-dirs = { path = "./crates/ryo3-dirs" }
ryo3-flate2 = { path = "./crates/ryo3-flate2" }
ryo3-fnv = { path = "./crates/ryo3-fnv" }
ryo3-globset = { path = "./crates/ryo3-globset" }
ryo3-heck = { path = "./crates/ryo3-heck" }
ryo3-http = { path = "./crates/ryo3-http" }
ryo3-jiff = { path = "./crates/ryo3-jiff" }
ryo3-jiter = { path = "./crates/ryo3-jiter" }
ryo3-regex = { path = "./crates/ryo3-regex" }
ryo3-reqwest = { path = "./crates/ryo3-reqwest" }
ryo3-same-file = { path = "./crates/ryo3-same-file" }
ryo3-shlex = { path = "./crates/ryo3-shlex" }
ryo3-sqlformat = { path = "./crates/ryo3-sqlformat" }
ryo3-tokio = { path = "./crates/ryo3-tokio" }
ryo3-unindent = { path = "./crates/ryo3-unindent" }
ryo3-url = { path = "./crates/ryo3-url" }
ryo3-walkdir = { path = "./crates/ryo3-walkdir" }
ryo3-which = { path = "./crates/ryo3-which" }
ryo3-xxhash = { path = "./crates/ryo3-xxhash" }
ryo3-zstd = { path = "./crates/ryo3-zstd" }

# pyo3
pyo3 = { version = "0.23.4", features = ["experimental-inspect", "num-bigint"] }
pyo3-async-runtimes = { version = "0.23", features = ["attributes", "tokio-runtime"] }
pyo3-build-config = "0.23.3"
pyo3-bytes = "0.1.2"
# external
anyhow = "1.0.75"
bytes = "1.10.0"
dirs = { version = "6.0.0", features = [] }
futures-core = "0.3.31"
futures-util = "0.3.31"
globset = { version = "0.4.15", features = ["serde"] }
heck = "0.5.0"
http = "1.2.0"
jiff = { version = "0.1.29", features = ["default", "serde"] }
jiter = { version = "0.8.2", features = ["python"] }
regex = "1.11.1"
reqwest = { version = "0.12.12", features = ["blocking", "brotli", "charset", "cookies", "deflate", "gzip", "http2", "macos-system-configuration", "rustls-tls-native-roots", "stream", "zstd"], default-features = false}
serde = { version = "1.0", features = ["derive"] }
serde_bytes = "0.11.12"
serde_json = "1.0.137"
shlex = "1.3.0"
thiserror = "2.0.11"
tokio = { version = "1.43.0", features = ["full"] }
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.19", features = ["serde", "serde_json", "env-filter", "default"] }
unindent = "0.2.3"
url = { version = "2.5.4", features = ["serde"] }
walkdir = "2.4.0"
which = { version = "7.0.1", features = ["regex"] }
xxhash-rust = { version = "0.8.15", features = ["const_xxh3", "const_xxh32", "const_xxh64", "xxh3", "xxh32", "xxh64"] }
zstd = "0.13.2"

[workspace.lints.rust]
unsafe_code = "warn"
unreachable_pub = "warn"

[workspace.lints.clippy]
# groups
all = { level = "warn", priority = -2 }
pedantic = { level = "warn", priority = -2 }
correctness = { level = "warn", priority = 2 }
panic = { level = "warn", priority = -1 }
style = { level = "warn", priority = 1 }
perf = { level = "warn", priority = 3 }
# DENY lints
unwrap_used = "deny"
# allow pedantic
missing_errors_doc = "allow"
missing_panics_doc = "allow"
module_name_repetitions = "allow"
