name: ci

on:
  push:
    branches:
      - main
      - master
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_PROFILE: ${{ startsWith(github.ref, 'refs/tags/') && 'release' || 'release-thin' }}

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    permissions:
      contents: read
      packages: write # Required to upload docker images to ghcr

    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
            manylinux: auto
          - runner: ubuntu-latest
            target: x86
            manylinux: auto
          - runner: ubuntu-latest
            target: aarch64
            manylinux: "2_28"
          - runner: ubuntu-latest
            target: armv7
            manylinux: auto
          - runner: ubuntu-latest
            target: s390x
            manylinux: auto
          - runner: ubuntu-latest
            target: ppc64le
            manylinux: auto

    steps:
      - uses: actions/checkout@v5
      - name: install-uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
      - name: install-python
        run: uv python install 3.11 3.12 3.13 3.13t 3.14 3.14t pypy3.11
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --out dist --interpreter 3.11 3.12 3.13 3.13t 3.14 3.14t pypy3.11 --profile ${{ env.CARGO_PROFILE }}
          sccache: "true"
          manylinux: ${{ matrix.platform.manylinux }} # SUPER WEIRD BUT ARRRRRRM IS A PITA
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist
      - name: pytest
        if: ${{ startsWith(matrix.platform.target, 'x86_64') }}
        shell: bash
        run: |
          set -e
          python3 -m venv .venv
          source .venv/bin/activate
          pip install ry --no-index --no-deps --find-links dist --force-reinstall
          pip install -r requirements.dev.txt
          pip install pytest
          pytest

      - name: pytest
        if:
          ${{ !startsWith(matrix.platform.target, 'x86') && matrix.platform.target != 'ppc64' }}
        uses: uraimo/run-on-arch-action@v3
        with:
          arch: ${{ matrix.platform.target }}
          distro: ubuntu22.04
          githubToken: ${{ github.token }}
          dockerRunArgs: |
            --volume "${{ github.workspace }}:/workspace"
            --workdir /workspace
          install: |
            set -euxo pipefail
            apt-get update
            apt-get install -y --no-install-recommends software-properties-common gnupg dirmngr ca-certificates curl tzdata
            add-apt-repository -y ppa:deadsnakes/ppa
            apt-get update
            apt-get install -y --no-install-recommends python3.11 python3.11-venv python3.11-distutils
            curl -sS https://bootstrap.pypa.io/get-pip.py | python3.11
            python3.11 -m pip install -U pip pytest pytest-asyncio pytest-benchmark hypothesis uvicorn anyio orjson==3.10.18 pydantic
          run: |
            set -e
            ls -l /workspace/dist
            python3.11 -V
            python3.11 -m pip install ry --no-index --no-deps --find-links /workspace/dist --force-reinstall
            python3.11 -m pytest

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
    steps:
      - uses: actions/checkout@v5
      - name: install-uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
      - name: install-python
        run: uv python install 3.11 3.12 3.13 3.13t 3.14 3.14t pypy3.11
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --out dist --interpreter 3.11 3.12 3.13 3.13t 3.14 3.14t pypy3.11 --profile ${{ env.CARGO_PROFILE }}
          sccache: "true"
          manylinux: musllinux_1_2
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          # python-version: 3.x
          python-version: '3.13'
          # Need to include architecture: https://github.com/PyO3/maturin-action/issues/375
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --out dist --find-interpreter --profile ${{ env.CARGO_PROFILE }}
          sccache: "true"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist
      - name: pytest
        if: ${{ !startsWith(matrix.target, 'aarch64') }}
        shell: bash
        run: |
          set -e
          pip install ry --no-index --no-deps --find-links dist --force-reinstall
          pip install -r requirements.dev.txt
          pytest

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          # - runner: macos-14
          #   target: aarch64
          - runner: macos-15
            target: aarch64
          # - runner: macos-15-intel # maybe enable?
          #   target: x86_64
    steps:
      - uses: actions/checkout@v5
      - name: install-uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
      - name: install-python
        run: uv python install 3.11 3.12 3.13 3.13t 3.14 3.14t pypy3.11
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --out dist --interpreter 3.11 3.12 3.13 3.13t 3.14 3.14t pypy3.11 --profile ${{ env.CARGO_PROFILE }}
          sccache: "true"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    environment: release-python
    if:
      ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
    needs: [linux, musllinux, windows, macos, sdist]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v5
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-path: "wheels-*/*"
      - name: Publish to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
      - name: gh-release
        uses: softprops/action-gh-release@v2
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        with:
          generate_release_notes: true
          files: |
            wheels-*/*
