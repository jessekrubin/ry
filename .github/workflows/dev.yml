name: dev

on:
  push:
    branches:
      - "*"
      - "*/*"
      - "**"
      - "!main"
      - "!master"
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: install-rust-stable
        uses: dtolnay/rust-toolchain@stable
      - name: setup-rust-cache
        uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@v2
        with:
          tool: just
      - run: just ci


  test-python:
    name: test-python-${{ matrix.python-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        target: [ x86_64 ]
        python-version: [ "3.10", "pypy3.10" ]
    steps:
      - uses: actions/checkout@v4
      - name: install-rust-stable
        uses: dtolnay/rust-toolchain@stable
      - name: setup-rust-cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust-test-python-${{ matrix.python-version }}"
      - name: install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: install deps
        run: |
          uv sync
      - name: install ry
        run: |
          uv -v pip install -e .
        env:
          RUST_BACKTRACE: 1
      - run: uv pip freeze
      - run: uv run pytest

#  dev-test-linux-x86_64:
#    runs-on: ubuntu-latest
#    timeout-minutes: 15
#    strategy:
#      matrix:
#        target: [ x86_64 ]
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-python@v5
#        with:
#          python-version: "3.10"
#      - name: Build wheels
#        uses: PyO3/maturin-action@v1
#        with:
#          target: ${{ matrix.target }}
#          args: --release --out dist --find-interpreter
#          sccache: "true"
#      - name: pytest
#        if: ${{ startsWith(matrix.target, 'x86_64') }}
#        shell: bash
#        run: |
#          set -e
#          pip install ry --find-links dist --force-reinstall
#          pip install -r requirements.dev.txt
#          pip install pytest
#          pytest
