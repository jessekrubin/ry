target-version = "py310"
line-length = 88
preview = true
include = [
  "python/**/*.{py,pyi}",
  "scripts/**/*.py",
  "tests/**/*.{py,pyi}",
  "bench/**/*.{py,pyi}",
  "examples/**/*.{py,pyi}",
  "docs/ryo3_version.py",
]
lint.task-tags = [
  # defaults
  "TODO",
  "FIXME",
  "XXX",
  # typos
  "typos",
]
format.docstring-code-format = true
lint.select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "ERA001",
  "PYI",
  "EM",
  "F",
  "FA",
  "FBT",
  "I",
  "ICN",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  # "RUF022", # unsorted-dunder-all
  "S",
  "T",
  "TC",
  "TID",
  "UP",
  "W",
  "YTT",
]
lint.ignore = [
  "E501",    # line length
  "FBT003",  # boolean-positional-value-in-call
  "PLR2004", # magic values (super dumb rule)
  "PYI021",  # docstring-in-stub
]
# Require explicit selection of preview rules.
lint.explicit-preview-rules = true
lint.exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]
lint.per-file-ignores."python/ry/JSON.pyi" = ["N999"]
# Tests can use magic values, assertions, and relative imports
lint.per-file-ignores."bench/**/*.py" = [
  "B011",
  "DTZ001",
  "PL",
  "S101",
  "S103",
  "S307",
  "S603",
  "T201",
  "TID252",
]
lint.per-file-ignores."tests/**/*.py" = [
#  "B011",
  "B018",
  "DTZ001",
  "PL",
  "S101",
  "S103",
  "S301",
  "S307",
  "S603",
  "TID252",
]
lint.per-file-ignores."tests/reqwest/conftest.py" = ["ARG001"]
lint.per-file-ignores."python/ry/dev/*.py" = [
  "PLC0415"
]
lint.per-file-ignores."python/ry/ryo3/*.pyi" = ["F401", "F821"]
lint.per-file-ignores."scripts/**" = ["S101", "S603", "T201"]
lint.unfixable = []
lint.flake8-tidy-imports.ban-relative-imports = "all"
lint.isort.known-first-party = ["ry"]
lint.flake8-boolean-trap.extend-allowed-calls = [
  "pydantic.Field",
  "hypothesis.assume",
]
# =============================================================================
# Type checking
# =============================================================================
lint.preview = true
lint.pydocstyle.convention = "google"
